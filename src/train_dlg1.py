# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'train_dlg.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from pycaret.datasets import get_data
from pycaret.classification import *
import os
import sys
from subprocess import Popen, PIPE
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import matplotlib
from PIL import Image

class TableModel(QtCore.QAbstractTableModel):

    def __init__(self, data):
        super(TableModel, self).__init__()
        self._data = data

    def data(self, index, role):
        if role == Qt.DisplayRole:
            value = self._data.iloc[index.row(), index.column()]
            return str(value)

    def rowCount(self, index):
        return self._data.shape[0]

    def columnCount(self, index):
        return self._data.shape[1]

    def headerData(self, section, orientation, role):
        # section is the index of the column/row.
        if role == Qt.DisplayRole:
            if orientation == Qt.Horizontal:
                return str(self._data.columns[section])

            if orientation == Qt.Vertical:
                return str(self._data.index[section])

class Ui_train_dlg(object):
    def setupUi(self, train_dlg):
        train_dlg.setObjectName("train_dlg")
        train_dlg.resize(943, 563)
        self.buttonBox = QtWidgets.QDialogButtonBox(train_dlg)
        self.buttonBox.setGeometry(QtCore.QRect(580, 520, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.tabWidget = QtWidgets.QTabWidget(train_dlg)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 931, 511))
        self.tabWidget.setObjectName("tabWidget")
        self.load = QtWidgets.QWidget()
        self.load.setObjectName("load")
        self.load_table = QtWidgets.QTableView(self.load)
        self.load_table.setGeometry(QtCore.QRect(70, 20, 791, 381))
        self.load_table.setObjectName("load_table")

        self.load_btn = QtWidgets.QPushButton(self.load)
        self.load_btn.setGeometry(QtCore.QRect(70, 420, 791, 41))
        self.load_btn.setObjectName("load_btn")
        self.tabWidget.addTab(self.load, "")
        self.setup = QtWidgets.QWidget()
        self.setup.setObjectName("setup")
        self.setup_btn = QtWidgets.QPushButton(self.setup)
        self.setup_btn.setGeometry(QtCore.QRect(530, 420, 331, 41))
        self.setup_btn.setObjectName("setup_btn")
        self.setup_table = QtWidgets.QTableView(self.setup)
        self.setup_table.setGeometry(QtCore.QRect(70, 20, 791, 381))
        self.setup_table.setObjectName("setup_table")

        self.target_entry = QtWidgets.QLineEdit(self.setup)
        self.target_entry.setGeometry(QtCore.QRect(70, 420, 451, 41))
        self.target_entry.setObjectName("target_entry")
        self.tabWidget.addTab(self.setup, "")
        self.compare = QtWidgets.QWidget()
        self.compare.setObjectName("compare")
        self.compare_btn = QtWidgets.QPushButton(self.compare)
        self.compare_btn.setGeometry(QtCore.QRect(70, 420, 791, 41))
        self.compare_btn.setObjectName("compare_btn")
        self.compare_table = QtWidgets.QTableView(self.compare)
        self.compare_table.setGeometry(QtCore.QRect(70, 20, 791, 381))
        self.compare_table.setObjectName("compare_table")

        self.tabWidget.addTab(self.compare, "")
        self.choose_class = QtWidgets.QWidget()
        self.choose_class.setObjectName("choose_class")
        self.layoutWidget_2 = QtWidgets.QWidget(self.choose_class)
        self.layoutWidget_2.setGeometry(QtCore.QRect(130, 70, 611, 381))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.layoutWidget_2.setFont(font)
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.formLayout_2 = QtWidgets.QFormLayout(self.layoutWidget_2)
        self.formLayout_2.setContentsMargins(0, 0, 0, 0)
        self.formLayout_2.setObjectName("formLayout_2")
        self.lr_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lr_btn.setFont(font)
        self.lr_btn.setObjectName("lr_btn")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.lr_btn)
        self.et_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.et_btn.setFont(font)
        self.et_btn.setObjectName("et_btn")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.et_btn)
        self.knn_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.knn_btn.setFont(font)
        self.knn_btn.setObjectName("knn_btn")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.knn_btn)
        self.xgboost_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.xgboost_btn.setFont(font)
        self.xgboost_btn.setObjectName("xgboost_btn")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.xgboost_btn)
        self.nb_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.nb_btn.setFont(font)
        self.nb_btn.setObjectName("nb_btn")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.nb_btn)
        self.lightgbm_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lightgbm_btn.setFont(font)
        self.lightgbm_btn.setObjectName("lightgbm_btn")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lightgbm_btn)
        self.dt_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.dt_btn.setFont(font)
        self.dt_btn.setObjectName("dt_btn")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.dt_btn)
        self.catboost_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.catboost_btn.setFont(font)
        self.catboost_btn.setObjectName("catboost_btn")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.catboost_btn)
        self.svm_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.svm_btn.setFont(font)
        self.svm_btn.setObjectName("svm_btn")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.svm_btn)
        self.qda_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.qda_btn.setFont(font)
        self.qda_btn.setObjectName("qda_btn")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.qda_btn)
        self.svm_rk_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.svm_rk_btn.setFont(font)
        self.svm_rk_btn.setObjectName("svm_rk_btn")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.svm_rk_btn)
        self.rf_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.rf_btn.setFont(font)
        self.rf_btn.setObjectName("rf_btn")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.rf_btn)
        self.gpc_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.gpc_btn.setFont(font)
        self.gpc_btn.setObjectName("gpc_btn")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.gpc_btn)
        self.stacked_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.stacked_btn.setFont(font)
        self.stacked_btn.setObjectName("stacked_btn")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.stacked_btn)
        self.mlp_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.mlp_btn.setFont(font)
        self.mlp_btn.setObjectName("mlp_btn")
        self.formLayout_2.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.mlp_btn)
        self.blended_btn = QtWidgets.QRadioButton(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.blended_btn.setFont(font)
        self.blended_btn.setObjectName("blended_btn")
        self.formLayout_2.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.blended_btn)
        self.tabWidget.addTab(self.choose_class, "")
        self.assess = QtWidgets.QWidget()
        self.assess.setObjectName("assess")
        self.assess_btn = QtWidgets.QPushButton(self.assess)
        self.assess_btn.setGeometry(QtCore.QRect(70, 420, 791, 41))
        self.assess_btn.setObjectName("assess_btn")
        self.assess_table = QtWidgets.QTableView(self.assess)
        self.assess_table.setGeometry(QtCore.QRect(70, 20, 791, 381))
        self.assess_table.setObjectName("assess_table")

        self.tabWidget.addTab(self.assess, "")
        self.plot_tab = QtWidgets.QWidget()
        self.plot_tab.setObjectName("plot_tab")
        self.groupBox = QtWidgets.QGroupBox(self.plot_tab)
        self.groupBox.setGeometry(QtCore.QRect(70, 20, 391, 431))
        self.groupBox.setObjectName("groupBox")
        self.layoutWidget_3 = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget_3.setGeometry(QtCore.QRect(30, 30, 301, 381))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.layoutWidget_3.setFont(font)
        self.layoutWidget_3.setObjectName("layoutWidget_3")
        self.formLayout_3 = QtWidgets.QFormLayout(self.layoutWidget_3)
        self.formLayout_3.setContentsMargins(0, 0, 0, 0)
        self.formLayout_3.setObjectName("formLayout_3")
        self.auc_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.auc_plot.setFont(font)
        self.auc_plot.setObjectName("auc_plot")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.auc_plot)
        self.pr_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pr_plot.setFont(font)
        self.pr_plot.setObjectName("pr_plot")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.pr_plot)
        self.cm_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.cm_plot.setFont(font)
        self.cm_plot.setObjectName("cm_plot")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.cm_plot)
        self.cr_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.cr_plot.setFont(font)
        self.cr_plot.setObjectName("cr_plot")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.cr_plot)
        self.lc_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lc_plot.setFont(font)
        self.lc_plot.setObjectName("lc_plot")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.lc_plot)
        self.fi_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.fi_plot.setFont(font)
        self.fi_plot.setObjectName("fi_plot")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.fi_plot)
        self.rfs_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.rfs_plot.setFont(font)
        self.rfs_plot.setObjectName("rfs_plot")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.rfs_plot)
        self.cpe_plot = QtWidgets.QRadioButton(self.layoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.cpe_plot.setFont(font)
        self.cpe_plot.setObjectName("cpe_plot")
        self.formLayout_3.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.cpe_plot)
        self.groupBox_2 = QtWidgets.QGroupBox(self.plot_tab)
        self.groupBox_2.setGeometry(QtCore.QRect(490, 20, 391, 431))
        self.groupBox_2.setObjectName("groupBox_2")
        self.layoutWidget_5 = QtWidgets.QWidget(self.groupBox_2)
        self.layoutWidget_5.setGeometry(QtCore.QRect(30, 30, 301, 381))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.layoutWidget_5.setFont(font)
        self.layoutWidget_5.setObjectName("layoutWidget_5")
        self.formLayout_5 = QtWidgets.QFormLayout(self.layoutWidget_5)
        self.formLayout_5.setContentsMargins(0, 0, 0, 0)
        self.formLayout_5.setObjectName("formLayout_5")
        self.summary_plot = QtWidgets.QRadioButton(self.layoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.summary_plot.setFont(font)
        self.summary_plot.setObjectName("summary_plot")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.summary_plot)
        self.correlation_plot = QtWidgets.QRadioButton(self.layoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.correlation_plot.setFont(font)
        self.correlation_plot.setObjectName("correlation_plot")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.correlation_plot)
        self.reason_plot = QtWidgets.QRadioButton(self.layoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.reason_plot.setFont(font)
        self.reason_plot.setObjectName("reason_plot")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.reason_plot)
        self.tabWidget.addTab(self.plot_tab, "")
        self.predict_tab = QtWidgets.QWidget()
        self.predict_tab.setObjectName("predict_tab")
        self.predict_table = QtWidgets.QTableView(self.predict_tab)
        self.predict_table.setGeometry(QtCore.QRect(70, 20, 791, 381))
        self.predict_table.setObjectName("predict_table")

        self.predict_btn = QtWidgets.QPushButton(self.predict_tab)
        self.predict_btn.setGeometry(QtCore.QRect(70, 420, 791, 41))
        self.predict_btn.setObjectName("predict_btn")
        self.tabWidget.addTab(self.predict_tab, "")
        self.save = QtWidgets.QWidget()
        self.save.setObjectName("save")
        self.save_table = QtWidgets.QTableView(self.save)
        self.save_table.setGeometry(QtCore.QRect(70, 20, 791, 381))
        self.save_table.setObjectName("save_table")

        self.save_model_btn = QtWidgets.QPushButton(self.save)
        self.save_model_btn.setGeometry(QtCore.QRect(530, 420, 331, 41))
        self.save_model_btn.setObjectName("save_model_btn")
        self.save_entry = QtWidgets.QLineEdit(self.save)
        self.save_entry.setGeometry(QtCore.QRect(70, 420, 451, 41))
        self.save_entry.setText("")
        self.save_entry.setObjectName("save_entry")
        self.tabWidget.addTab(self.save, "")

        self.retranslateUi(train_dlg)
        self.tabWidget.setCurrentIndex(0)
        self.buttonBox.accepted.connect(train_dlg.accept)
        self.buttonBox.rejected.connect(train_dlg.reject)
        QtCore.QMetaObject.connectSlotsByName(train_dlg)

    def retranslateUi(self, train_dlg):
        _translate = QtCore.QCoreApplication.translate
        train_dlg.setWindowTitle(_translate("train_dlg", "Train Classifier"))
        self.load_btn.setText(_translate("train_dlg", "Load Data"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.load), _translate("train_dlg", "Load Data"))
        self.setup_btn.setText(_translate("train_dlg", "Setup Data"))
        self.target_entry.setPlaceholderText(_translate("train_dlg", "ENTER TARGET CLASS...."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.setup), _translate("train_dlg", "Setup Data"))
        self.compare_btn.setText(_translate("train_dlg", "Compare Models"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.compare), _translate("train_dlg", "Compare Models"))
        self.lr_btn.setText(_translate("train_dlg", "Logistic Regression"))
        self.et_btn.setText(_translate("train_dlg", "Extra Trees Classifier"))
        self.knn_btn.setText(_translate("train_dlg", "K Neighbors Classifier"))
        self.xgboost_btn.setText(_translate("train_dlg", "Extreme Gradiant Boosting"))
        self.nb_btn.setText(_translate("train_dlg", "Naive Bayes"))
        self.lightgbm_btn.setText(_translate("train_dlg", "Light Gradient Boosting Machine"))
        self.dt_btn.setText(_translate("train_dlg", "Decision Tree Classifier"))
        self.catboost_btn.setText(_translate("train_dlg", "CatBoost Classifier"))
        self.svm_btn.setText(_translate("train_dlg", "SVM - Linear Kernal"))
        self.qda_btn.setText(_translate("train_dlg", "Quadratic Discriminant Analysis"))
        self.svm_rk_btn.setText(_translate("train_dlg", "SVM - Radial Kernal"))
        self.rf_btn.setText(_translate("train_dlg", "Random Forest Classifier"))
        self.gpc_btn.setText(_translate("train_dlg", "Gaussian Process Classifer"))
        self.stacked_btn.setText(_translate("train_dlg", "Stacked Model"))
        self.mlp_btn.setText(_translate("train_dlg", "MLP Classifier"))
        self.blended_btn.setText(_translate("train_dlg", "Blended Model"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.choose_class), _translate("train_dlg", "Choose Classifier"))
        self.assess_btn.setText(_translate("train_dlg", "Assess Model Performance"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.assess), _translate("train_dlg", "Assess Performance"))
        self.groupBox.setTitle(_translate("train_dlg", "Performance"))
        self.auc_plot.setText(_translate("train_dlg", "Area Under Curve"))
        self.pr_plot.setText(_translate("train_dlg", "Precision Recall"))
        self.cm_plot.setText(_translate("train_dlg", "Confusion Matrix"))
        self.cr_plot.setText(_translate("train_dlg", "Classification Report"))
        self.lc_plot.setText(_translate("train_dlg", "Learning Curve"))
        self.fi_plot.setText(_translate("train_dlg", "Feature Importance"))
        self.rfs_plot.setText(_translate("train_dlg", "Recursive Feature Selection"))
        self.cpe_plot.setText(_translate("train_dlg", "Class Prediction Error"))
        self.groupBox_2.setTitle(_translate("train_dlg", "Interpretation"))
        self.summary_plot.setText(_translate("train_dlg", "Summary"))
        self.correlation_plot.setText(_translate("train_dlg", "Correlation"))
        self.reason_plot.setText(_translate("train_dlg", "Reason"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.plot_tab), _translate("train_dlg", "Plot"))
        self.predict_btn.setText(_translate("train_dlg", "Test Data Predictions"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.predict_tab), _translate("train_dlg", "Predict"))
        self.save_model_btn.setText(_translate("train_dlg", "Save Model"))
        self.save_entry.setPlaceholderText(_translate("train_dlg", "Enter save file name...."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.save), _translate("train_dlg", "Save Model"))

        self.load_btn.clicked.connect(self.load_data)
        self.setup_btn.clicked.connect(self.setup_data)
        self.compare_btn.clicked.connect(self.compare_models)
        
        self.lr_btn.clicked.connect(self.lr_model)
        self.knn_btn.clicked.connect(self.knn_model)
        self.nb_btn.clicked.connect(self.nb_model)
        self.dt_btn.clicked.connect(self.dt_model)
        self.svm_btn.clicked.connect(self.svm_model)
        self.svm_rk_btn.clicked.connect(self.rbfsvm_model)
        self.gpc_btn.clicked.connect(self.gpc_model)
        self.mlp_btn.clicked.connect(self.mlp_model)
        self.rf_btn.clicked.connect(self.rf_model)
        self.qda_btn.clicked.connect(self.lda_model)
        #self.gbc_btn.clicked.connect(self.gbc_model)
        #self.lda_btn.clicked.connect(self.lda_model)
        self.et_btn.clicked.connect(self.et_model)
        self.xgboost_btn.clicked.connect(self.xgboost_model)
        self.lightgbm_btn.clicked.connect(self.lightgbm_model)
        self.catboost_btn.clicked.connect(self.gbc_model)
        
        self.assess_btn.clicked.connect(self.assess_performance)
        
        self.auc_plot.clicked.connect(self.auc_plt)
        self.pr_plot.clicked.connect(self.pr_plt)
        self.cm_plot.clicked.connect(self.cm_plt)
        self.lc_plot.clicked.connect(self.lc_plt)
        self.fi_plot.clicked.connect(self.fi_plt)
        self.rfs_plot.clicked.connect(self.rfs_plt)
        self.cpe_plot.clicked.connect(self.cpe_plt)
        self.summary_plot.clicked.connect(self.sum_plt)
        self.correlation_plot.clicked.connect(self.cor_plt)
        self.reason_plot.clicked.connect(self.r_plt)
        
        self.predict_btn.clicked.connect(self.predict)
        
        self.save_model_btn.clicked.connect(self.save_model)
    def load_data(self):
        self.data, _ = QFileDialog.getOpenFileName()
        self.data = pd.read_csv(self.data)

        self.model_load = TableModel(self.data)
        self.load_table.setModel(self.model_load)    
    def setup_data(self):
        entry = self.target_entry.text()
        self.setup_data = setup(self.data, target = entry, silent=True, html=False)
        
        self.model_setup = TableModel(self.data)
        self.setup_table.setModel(self.model_setup)
        
        

        
    def compare_models(self):
        self.compare_models = compare_models(n_select=3)
        self.compare_models_data = pull()
        self.model_compare = TableModel(self.compare_models_data)
        self.compare_table.setModel(self.model_compare)
    def lr_model(self):
        self.lr_model = create_model('lr')
        self.selected_model = self.lr_model
    def knn_model(self):
        self.knn_model = create_model('knn')
        self.selected_model = self.knn_model
    def nb_model(self):
        self.nb_model = create_model('nb')
        self.selected_model = self.nb_model   
    def dt_model(self):
        self.dt_model = create_model('dt')
        self.selected_model = self.dt_model
    def svm_model(self):
        self.svm_model = create_model('svm')
        self.selected_model = self.svm_model
    def rbfsvm_model(self):
        self.rbfsvm_model = create_model('rbfsvm')
        self.selected_model = self.rbfsvm_model
    def gpc_model(self):
        self.gpc_model = create_model('gpc')
        self.selected_model = self.gpc_model
    def mlp_model(self):
        self.mlp_model = create_model('mlp')
        self.selected_model = self.mlp_model
    def rf_model(self):
        self.rf_model = create_model('rf')
        self.selected_model = self.rf_model
    def qda_model(self):
        self.qda_model = create_model('qda')
        self.selected_model = self.qda_model
    def gbc_model(self):
        self.gbc_model = create_model('gbc')
        self.selected_model = self.gbc_model
    def lda_model(self):
        self.lda_model = create_model('lda')
        self.selected_model = self.lda_model
    def et_model(self):
        self.et_model = create_model('et')
        self.selected_model = self.et_model
    def xgboost_model(self):
        self.xgboost_model = create_model('lightgbm')
        self.selected_model = self.xgboost_model
    def lightgbm_model(self):
        self.lightgbm_model = create_model('lightgbm')
        self.selected_model = self.lr_model
    def catboost_model(self):
        self.catboost_model = create_model('catboost')
        self.selected_model = self.catboost_model
    def stacked_model(self):
        self.stacked_model = stack_models(self.compare_models)
        self.selected_model = self.stacked_model
    
    def assess_performance(self):
        self.tuned_model = tune_model(self.selected_model)
        self.assess = pull(self.tuned_model)
        self.model_assess = TableModel(self.assess)
        self.assess_table.setModel(self.model_assess)
    def auc_plt(self):
        self.auc_plot = plot_model(self.tuned_model,'auc', save=True)
        image = Image.open('AUC.png')
        image.show()
    def pr_plt(self):
        self.pr_plt = plot_model(self.tuned_model, 'pr', save=True)
        image = Image.open('Precision Recall.png')
        image.show()
    def cm_plt(self):
        self.cm_plt = plot_model(self.tuned_model, 'confusion_matrix', save=True)
        image = Image.open('Confusion Matrix.png')
        image.show()
    def lc_plt(self):
        self.lc_plt = plot_model(self.tuned_model, 'learning', save=True)
        image = Image.open('Learning Curve.png')
        image.show()
    def fi_plt(self):
        self.fi_plt = plot_model(self.tuned_model, 'feature', save=True)
        image = Image.open('Feature Importance.png')
        image.show()
    def rfs_plt(self):
        self.rfs_plt = plot_model(self.tuned_model, 'rfe', save=True)
        image = Image.open('Recursive Feature Selection.png')
        image.show()
    def cpe_plt(self):
        self.cpe_plt = plot_model(self.tuned_model, 'error', save=True)
        image = Image.open('Prediction Error.png')
        image.show()
    def sum_plt(self):
        sum_plt = interpret_model(self.tuned_model, 'summary', save=True)
        image = Image.open('SHAP summary.png')
        image.show()
    def cor_plt(self):
        cor_plt = interpret_model(self.tuned_model, 'correlation', save=True)
        image = Image.open('SHAP correlation.png')
        image.show()
    def r_plt(self):
        r_plt = interpret_model(self.tuned_model, 'reason', save=True)
        image = Image.open('SHAP reason.html')
        image.show()    
    def predict(self):
        self.final_model = finalize_model(self.tuned_model)
        unseen_data = get_config("X_test")
        pred_holdout = predict_model(self.final_model)
        #pred_data = pull(pred_holdout)
        self.model_predict = TableModel(pred_holdout)
        self.predict_table.setModel(self.model_predict)
    def save_model(self):
        final_data = pull(self.final_model)
        save_name = self.save_entry.text()
        self.model_save = TableModel(final_data)
        self.save_table.setModel(self.model_save)        
        self.save_model = save_model(self.final_model, save_name)
        self.save_model_btn.setText("Saved!")
 

           
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    train_dlg = QtWidgets.QDialog()
    ui = Ui_train_dlg()
    ui.setupUi(train_dlg)
    train_dlg.show()
    sys.exit(app.exec_())
